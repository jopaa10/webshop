"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/mockData.tsx":
/*!********************************!*\
  !*** ./src/utils/mockData.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MOCK_DATA: function() { return /* binding */ MOCK_DATA; },\n/* harmony export */   getCardById: function() { return /* binding */ getCardById; }\n/* harmony export */ });\nconst MOCK_DATA = [\n    {\n        id: 1,\n        title: \"Samsung Galaxy s10\",\n        price: 499.99,\n        quantity: 1,\n        image: \"/images/s10.jpg\",\n        detail: \"New smartphone\",\n        brand: \"samsung\"\n    },\n    {\n        id: 2,\n        title: \"Samsung Galaxy s21\",\n        price: 599.99,\n        quantity: 1,\n        image: \"/images/s20.jpeg\",\n        detail: \"New smartphone\",\n        brand: \"samsung\"\n    },\n    {\n        id: 3,\n        title: \"Samsung Galaxy s20\",\n        price: 299.99,\n        quantity: 1,\n        image: \"/images/s21.webp\",\n        detail: \"New smartphone\",\n        brand: \"samsung\"\n    },\n    {\n        id: 4,\n        title: \"iPhone 13\",\n        price: 899.99,\n        quantity: 1,\n        image: \"/images/iphone13.jpg\",\n        detail: \"New smartphone\",\n        brand: \"iphone\"\n    },\n    {\n        id: 5,\n        title: \"iPhone 14 Pro\",\n        price: 699.99,\n        quantity: 1,\n        image: \"/images/iphone14pro.jpeg\",\n        detail: \"New smartphone\",\n        brand: \"iphone\"\n    }\n];\nconst getCardById = (id)=>{\n    return MOCK_DATA.find((item)=>item.id === id);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbW9ja0RhdGEudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sTUFBTUEsWUFBd0I7SUFDbkM7UUFDRUMsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsT0FBTztJQUNUO0lBQ0E7UUFDRU4sSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsT0FBTztJQUNUO0lBQ0E7UUFDRU4sSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsT0FBTztJQUNUO0lBQ0E7UUFDRU4sSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsT0FBTztJQUNUO0lBQ0E7UUFDRU4sSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsT0FBTztJQUNUO0NBQ0QsQ0FBQztBQUVLLE1BQU1DLGNBQWMsQ0FBQ1A7SUFDMUIsT0FBT0QsVUFBVVMsSUFBSSxDQUFDLENBQUNDLE9BQW1CQSxLQUFLVCxFQUFFLEtBQUtBO0FBQ3hELEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL21vY2tEYXRhLnRzeD85NWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhcnREYXRhIH0gZnJvbSBcIkAvdHlwZXMvY2FydFwiO1xuXG5leHBvcnQgY29uc3QgTU9DS19EQVRBOiBDYXJ0RGF0YVtdID0gW1xuICB7XG4gICAgaWQ6IDEsXG4gICAgdGl0bGU6IFwiU2Ftc3VuZyBHYWxheHkgczEwXCIsXG4gICAgcHJpY2U6IDQ5OS45OSxcbiAgICBxdWFudGl0eTogMSxcbiAgICBpbWFnZTogXCIvaW1hZ2VzL3MxMC5qcGdcIixcbiAgICBkZXRhaWw6IFwiTmV3IHNtYXJ0cGhvbmVcIixcbiAgICBicmFuZDogXCJzYW1zdW5nXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogMixcbiAgICB0aXRsZTogXCJTYW1zdW5nIEdhbGF4eSBzMjFcIixcbiAgICBwcmljZTogNTk5Ljk5LFxuICAgIHF1YW50aXR5OiAxLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvczIwLmpwZWdcIixcbiAgICBkZXRhaWw6IFwiTmV3IHNtYXJ0cGhvbmVcIixcbiAgICBicmFuZDogXCJzYW1zdW5nXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogMyxcbiAgICB0aXRsZTogXCJTYW1zdW5nIEdhbGF4eSBzMjBcIixcbiAgICBwcmljZTogMjk5Ljk5LFxuICAgIHF1YW50aXR5OiAxLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvczIxLndlYnBcIixcbiAgICBkZXRhaWw6IFwiTmV3IHNtYXJ0cGhvbmVcIixcbiAgICBicmFuZDogXCJzYW1zdW5nXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogNCxcbiAgICB0aXRsZTogXCJpUGhvbmUgMTNcIixcbiAgICBwcmljZTogODk5Ljk5LFxuICAgIHF1YW50aXR5OiAxLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvaXBob25lMTMuanBnXCIsXG4gICAgZGV0YWlsOiBcIk5ldyBzbWFydHBob25lXCIsXG4gICAgYnJhbmQ6IFwiaXBob25lXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogNSxcbiAgICB0aXRsZTogXCJpUGhvbmUgMTQgUHJvXCIsXG4gICAgcHJpY2U6IDY5OS45OSxcbiAgICBxdWFudGl0eTogMSxcbiAgICBpbWFnZTogXCIvaW1hZ2VzL2lwaG9uZTE0cHJvLmpwZWdcIixcbiAgICBkZXRhaWw6IFwiTmV3IHNtYXJ0cGhvbmVcIixcbiAgICBicmFuZDogXCJpcGhvbmVcIixcbiAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJkQnlJZCA9IChpZDogbnVtYmVyIHwgc3RyaW5nKSA9PiB7XG4gIHJldHVybiBNT0NLX0RBVEEuZmluZCgoaXRlbTogQ2FydERhdGEpID0+IGl0ZW0uaWQgPT09IGlkKTtcbn07XG4iXSwibmFtZXMiOlsiTU9DS19EQVRBIiwiaWQiLCJ0aXRsZSIsInByaWNlIiwicXVhbnRpdHkiLCJpbWFnZSIsImRldGFpbCIsImJyYW5kIiwiZ2V0Q2FyZEJ5SWQiLCJmaW5kIiwiaXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/mockData.tsx\n"));

/***/ })

});